// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pgSfCFo9UF4777TfUQAq8w
// Component: b6oFOBeOPQJ9
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Step1Button from "../../Step1Button"; // plasmic-import: HRPieMAss-cJ/component
import "@plasmicapp/react-web/lib/plasmic.css";
import sty from "./PlasmicStep2Button2.module.css"; // plasmic-import: b6oFOBeOPQJ9/css

createPlasmicElementProxy;

export const PlasmicStep2Button2__VariantProps = new Array();

export const PlasmicStep2Button2__ArgProps = new Array();

const $$ = {};

function PlasmicStep2Button2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <Step1Button
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames("__wab_instance", sty.root)}
    />
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicStep2Button2__ArgProps,
          internalVariantPropNames: PlasmicStep2Button2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicStep2Button2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStep2Button2";
  } else {
    func.displayName = `PlasmicStep2Button2.${nodeName}`;
  }
  return func;
}

export const PlasmicStep2Button2 = Object.assign(
  // Top-level PlasmicStep2Button2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicStep2Button2
    internalVariantProps: PlasmicStep2Button2__VariantProps,
    internalArgProps: PlasmicStep2Button2__ArgProps
  }
);

export default PlasmicStep2Button2;
/* prettier-ignore-end */
